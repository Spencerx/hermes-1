<h3>Changing settings for your subscription to message type: <%= MsgType.find(@subscr.msg_type_id).type_desc %></h3>

<% form_for @subscr do |f| %>
<table class="defaultTable">
  <tr>
    <td><strong>Delay: </strong></td>
    <td><%= collection_select('subscr', 'delay_id', @availDelay, 'id','name') %></td>
  </tr>

  <tr>
    <td><strong>Delivery: </strong></td>
    <td><%=  collection_select('subscr','delivery_id', @availDeliveries, 'id','description') %> </td>
  </tr>

  <tr>
    <td><strong>Description: </strong></td>
    <td><%= text_field_tag('subscr[description]', @subscr.description ) %></td>
  </tr>

  <tr>
    <td valign=top><strong> <%= link_to_function "Comment", "$('comment_box').toggle()" %></strong></td>

    <td> <div id="comment_box" style="display: none;"><%= text_area('subscr','comment', :size => "50x5") %></div></td>
  </tr>

</table>
<hr/>
<h3>Filter configuration for your subscription to message type: <%= MsgType.find(@subscr.msg_type_id).type_desc %></h3>
<table>
  <tbody id="filter_table" style="">
      <tr>
      <td colspan="4">
      No filter means, you will get all notifications for the chosen message type. Multiple filters mean &lt;filter1&gt; AND &lt;filter2&gt;... 
	    </td>
      <td><%= link_to_function("Add Filter", nil, :id => 'add_filter_link') do |page| 
                          page.insert_html(:before, 'counter', :partial => 'filter', :locals => { :parameter_list => @avail_params, :selected_param => nil, :selected_oper => nil, :value => nil } ) 
                          page << "recalc_filter_ids();"
                        end %></td>

      </tr>
      <% @filters.each_with_index  { |filt,i| %>
        <%= render :partial => 'filter', :locals => {:parameter_list => @avail_params, :selected_param => filt.parameter_id, :selected_oper => filt.operator, :value => filt.filterstring} %>
      <% } %>

    <tr id='counter'><td><%= hidden_field_tag 'filter_count',@filters.size %></td></tr>

    <script type="text/javascript">
      recalc_filter_ids();
    </script>

    <tr><td><%= submit_tag %></td></tr>
  </tbody>
</table>

<hr/>
<h3>Hints for Filter Creation</h3>

<p>Filters for subscriptions consist of three different settings:</p>
<ol>
<li><b>Parameter:</b> The first combo box contains a list of the parameters
  which belong to selected message type. The filter operation works on the 
  content of the parameter.</li>
<li><b>Operator:</b> The operator sets the type of the filter. There are some 
types of filters so far:</li>
  <ul>
   <li><b>oneof:</b>The oneof filter checks if the parameter value equals one
     of the list entries in value. The list of values is built by splitting the
     filter value at the commas.</li>
   <li><b>containsitem:</b> The containsitem filter checks if the list of
     filter values contains the value of the selected parameter. Again, the
     list is computed by splitting on commas.</li>
   <li><b>regexp:</b>The regexp-filter checks if the selected parameter value 
     matches the regexp given in the value. Be careful!</li>
   <li><b>special:</b>The special-operator provides special filters. The
     parameter value is ignored here. The filter value can be one of 
     <ul><li>_mypackages: The filter matches if this notification is about 
             a package which lists the user either in the project- or package
             meta file.</li>
         <li>_mypackagesstrict: The filter matches if the notification is about
             a package which lists the user in the package meta file.</li>
         <li>_myprojects: The filter matches if this notification is about one
             of the users projects</li>
         <li>_myrequests: All requests where you are listed in the target project.</li>
     </ul>
   </li>
   </ul>
   <li><b>Value:</b> The filter value with different meaning depending on the
  operator</li>
</ol>

<% end %>


