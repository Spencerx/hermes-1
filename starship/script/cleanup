#!/usr/bin/env ruby

require 'optparse'
require 'ostruct'

options = OpenStruct.new
options.days = 7
options.env = "development"

OptionParser.new do |opts|
  opts.banner = "Usage: script/cleanup [options]"

  opts.on("-d", "--days N", "number of days to keep") do |days|
    options.days = days
  end

  opts.on("-e", "--env ENV", "rails environment to use") do |env|
    options.env = env
  end

  opts.on_tail("-h", "--help", "show this message") do
    puts opts
    exit
  end
end.parse!

puts "Initializing #{options.env} environment..."
RAILS_ENV = options.env
require File.dirname(__FILE__) + '/../config/boot'
require RAILS_ROOT+"/config/environment"

delete_time = Time.now - options.days.to_i*60*60*24

Notification.transaction do 
  puts "Deleting notifications..."
  @ncount = Notification.delete_all ["generated < ?", delete_time]
  puts "Deleting notification parameters..."
  @npcount = ActiveRecord::Base.connection.delete <<-END_SQL
    DELETE QUICK FROM np
    USING notification_parameters np
    LEFT OUTER JOIN notifications n
      ON n.id = np.notification_id
    WHERE ISNULL(n.id)
  END_SQL
end

puts "#@ncount notifications with #@npcount parameters deleted."

puts "Deleting messages..."
Message.transaction do
  @mpcount = MessagesPeople.delete_all ["sent < ?", delete_time]
  @mcount = ActiveRecord::Base.connection.delete <<-END_SQL
    DELETE QUICK FROM m
    USING messages m 
    LEFT OUTER JOIN messages_people mp 
      ON m.id = mp.message_id
    WHERE ISNULL(mp.message_id)
  END_SQL
end

puts "#@mcount messages deleted."
puts "#@mpcount entries in messages_people deleted."

puts "Optimizing tables... "
ActiveRecord::Base.connection.execute "optimize table notifications"
ActiveRecord::Base.connection.execute "optimize table notification_parameters"
ActiveRecord::Base.connection.execute "optimize table messages"
ActiveRecord::Base.connection.execute "optimize table messages_people"
puts "done."
