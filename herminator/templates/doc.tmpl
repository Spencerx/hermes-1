<p>This documentation informs you about the client side usage of Hermes.
You want to read it if you develop software that wants to hand over 
messages to the Hermes system.</p>

<h2>Messages</h2>
<p>
Messages are complete texts that should be sent to a list of 
receivers such as emails. The receivers are specified by a 
to, cc and bcc list. Delays could be specified.</p>

<p>
To post messages, please send a POST or GET requests like this:</p>
<pre>
  http://<TMPL_VAR NAME=urlbase>/index.cgi?rm=post&\
                                          type=Type&\
                                          subject=subject&\
                                          body=body&\
                                          to=freitag@suse.de&\
                                          to=hermes@suse.de&\
                                          from=hermes@suse.de&\
                                          delay=HOURLY;
</pre>

<p>Message posting is not yet restricted. Beware of SPAM!</p>
<p>The <b>rm=post</b> parameter must be preserved to post a message</p>
<p>The <b>type</b> is the key on which the messages are grouped for 
digesting.</p>
<p>For <b>delay</b>  valid values are <tt>HOURLY</tt>, <tt>DAILY</tt>, <tt>WEEKLY</tt>
and <tt>MONTHLY</tt>, skipping the value sends it immediately.</p>

<p>To prepare messages for proper digesting, make sure to prepare the 
message with <tt>&lt;BODY&gt;</tt> and <tt>&lt;/BODY&gt;</tt> tags.
Everything inside these tags is inserted into the digest. Contents
outside of these tags is lost in the digest message.

<h2>Notifications</h2>

<p>Notifications are kind of signals to Hermes that a client system 
likes to inform a group of people of an event. Hermes creates a message
from it and sends it to all subscribed persons. A parameter hash can
be sent along with the notification that can be put into the message.
</p>

<pre>
  http://<TMPL_VAR NAME=urlbase>/index.cgi?rm=notify&\
                                          type=Type&
                                          sender=Sender&
                                          param1=...&param2=...
</pre>

<p>Note that it is not garanteed who will receive the message because
that depends on who is subscribed on the type and used filters.
</p>
<p>Posting to new types automatically creates the type</p>
